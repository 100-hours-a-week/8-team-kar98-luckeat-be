name: 🚀 deploy-dev

on:
  push:
    branches:
      - develop
  workflow_dispatch:  # 수동 실행 가능

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: luckeat-dev
  EB_ENVIRONMENT_NAME: luckeat-dev
  EB_APPLICATION_NAME: luckeat

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: 8-team-kar98-luckeat-be

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: 863518460358.dkr.ecr.ap-northeast-2.amazonaws.com
        run: |
          cd 8-team-kar98-luckeat-be
          
          # application.yml 생성
          echo "${{ secrets.DEV_APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          
          # Build and push backend image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Generate Dockerrun.aws.json
        run: |
          cd 8-team-kar98-luckeat-be
          cat > Dockerrun.aws.json << EOF
          {
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "863518460358.dkr.ecr.ap-northeast-2.amazonaws.com/luckeat-dev:latest",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": 8080,
                "HostPort": 80
              }
            ],
            "Volumes": [
              {
                "Host": {
                  "SourcePath": "/var/app/current/config"
                },
                "Container": {
                  "SourcePath": "/app/config",
                  "ReadOnly": true
                }
              }
            ]
          }
          EOF

      - name: Create application.yml
        run: |
          cd 8-team-kar98-luckeat-be
          mkdir -p .ebextensions
          echo "${{ secrets.DEV_APPLICATION_YML }}" | base64 --decode > .ebextensions/application.yml

      - name: Create ZIP file
        run: |
          cd 8-team-kar98-luckeat-be
          zip -r deploy.zip Dockerrun.aws.json .ebextensions/

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip
          wait_for_deployment: true
