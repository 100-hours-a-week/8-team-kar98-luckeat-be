name: 🚀 deploy

on:
  push:
    branches:
      - main
      - deploy수정
  workflow_dispatch:  # 수동 실행 가능

env:
  AWS_REGION: ap-northeast-2

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: 8-team-kar98-luckeat-be

      - name: Set environment variables
        run: |
            echo "ENV_TYPE=prod" >> $GITHUB_ENV
            echo "EC2_HOST=${{ secrets.PROD_EC2_HOST }}" >> $GITHUB_ENV
            echo "APPLICATION_YML=${{ secrets.PROD_APPLICATION_YML }}" >> $GITHUB_ENV
            echo "SENTRY_ENVIRONMENT=production" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=luckeat-prod" >> $GITHUB_ENV


      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        run: |
          cd 8-team-kar98-luckeat-be
          
          # Build and push backend image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:backend-${{ github.sha }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:backend-${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 디스크 공간 정리
            docker system prune -a -f
            docker volume prune -f

            # Pull latest images
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:backend-${{ github.sha }}
            
            # Update docker-compose.yml with new image tags
            sed -i "s|image: ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:backend-.*|image: ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:backend-${{ github.sha }}|g" docker-compose.yml


            cd /home/ubuntu
            echo "👉 ${{ env.ENV_TYPE }} 환경 application.yml 설정"
            mkdir -p config
            echo "${{ env.APPLICATION_YML }}" | base64 --decode > config/application.yml
            echo "👉 ${{ env.ENV_TYPE }} 환경 deploy.sh 스크립트 실행 시작"
            export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            bash docker_deploy.sh

